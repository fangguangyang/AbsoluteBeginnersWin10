1
00:00:03,230 --> 00:00:05,232
app 内购买，去除广告 （审核：章程）

2
00:00:05,232 --> 00:00:07,551
大家好，这个视频里我们要讲的是

3
00:00:07,552 --> 00:00:12,551
添加一个选项：

4
00:00:12,552 --> 00:00:15,491
让用户可以通过内购来去除广告

5
00:00:15,492 --> 00:00:18,011
很快我们就回来讲这个。

6
00:00:18,012 --> 00:00:21,311
但如果你还记得上个视频的结尾

7
00:00:21,312 --> 00:00:24,631
我当时慌了

8
00:00:24,632 --> 00:00:26,810
因为我们的应用有些功能丢了

9
00:00:26,811 --> 00:00:31,351
我们添加了广告控制，

10
00:00:31,352 --> 00:00:34,151
然后专辑封面就挂掉了……

11
00:00:34,152 --> 00:00:37,229
没有专辑封面这游戏还怎么玩？！

12
00:00:37,230 --> 00:00:42,229
我发现这个似乎只会在我机器上发生……

13
00:00:42,650 --> 00:00:44,527
当我把

14
00:00:44,528 --> 00:00:49,527
拖拽 Ad Mediator Control 到 designer surface

15
00:00:49,917 --> 00:00:54,496
因为某些不可知的原因，Data Template 的

16
00:00:54,497 --> 00:00:57,256
在这个item source GridView 里的

17
00:00:57,257 --> 00:00:59,304
所有的 binding expressions 都被移除了。

18
00:00:59,305 --> 00:01:00,563
其他的所有东西，

19
00:01:00,564 --> 00:01:03,604
和 data binding 有关的都挂了……

20
00:01:03,605 --> 00:01:07,164
所以我把之前一个老版本的 example

21
00:01:07,165 --> 00:01:09,404
复制粘贴进去把它修好了。

22
00:01:09,405 --> 00:01:11,943
我跟微软说了这件事，

23
00:01:11,944 --> 00:01:14,503
看起来是我自己的机器有一些特殊的问题，

24
00:01:14,504 --> 00:01:17,004
但丑话说在前，如果这种事情发生了

25
00:01:17,005 --> 00:01:20,624
起码你知道发生了什么。

26
00:01:20,625 --> 00:01:24,744
那浪费了我生命中无可挽回的几个小时。

27
00:01:24,745 --> 00:01:27,124
恩，我们要讲的

28
00:01:27,125 --> 00:01:31,744
其实是：如何添加一个

29
00:01:31,745 --> 00:01:36,744
让用户内购去广告的功能？

30
00:01:38,145 --> 00:01:42,373
其实你在这个网站里

31
00:01:42,374 --> 00:01:45,450
可以很好地开始学习这方面的内容

32
00:01:45,451 --> 00:01:48,379
让我打开那个网页……

33
00:01:49,491 --> 00:01:53,189
看起来这些指示还蛮清晰的

34
00:01:53,190 --> 00:01:55,910
有言在先：

35
00:01:55,911 --> 00:01:57,530
在你开发的过程中，

36
00:01:57,531 --> 00:02:00,390
有几件事情你需要

37
00:02:00,391 --> 00:02:03,590
在你把 App 提交到 Microsoft Store 前先去做。

38
00:02:05,350 --> 00:02:08,429
有一件我们要干的事情是：

39
00:02:08,430 --> 00:02:11,619
关于一个叫 Current App Simulator 的东西的。

40
00:02:11,620 --> 00:02:14,619
当我们昨晚 debug 的时候

41
00:02:14,620 --> 00:02:16,879
我们的 App 功能已经完善了，

42
00:02:16,880 --> 00:02:18,419
接着我们需要把

43
00:02:18,420 --> 00:02:21,799
所有的参考（references） 从 Current App Simulator 改为

44
00:02:21,800 --> 00:02:24,939
Current App。

45
00:02:24,940 --> 00:02:27,719
接着，无论什么时候我们在商店里

46
00:02:27,720 --> 00:02:29,413
准备发布我们的应用的时候，

47
00:02:29,414 --> 00:02:31,313
有一定的可能

48
00:02:31,314 --> 00:02:36,313
会出现一个

49
00:02:36,794 --> 00:02:38,833
内购项目的列表。

50
00:02:39,917 --> 00:02:43,296
所以我们要创建一个内购项目 （in-app offer token）

51
00:02:43,297 --> 00:02:44,936
我们要确保

52
00:02:44,937 --> 00:02:46,597
我们知道 in-app offer token是什么

53
00:02:46,598 --> 00:02:49,416
并记得把它们和它们的细节一起输进去

54
00:02:49,417 --> 00:02:50,176
比如

55
00:02:50,177 --> 00:02:53,473
每一个项目我们要收多少费用。

56
00:02:53,474 --> 00:02:56,733
很快我们就能看见这个了。

57
00:02:56,734 --> 00:03:00,233
这儿我创建了一个非常简单的应用，

58
00:03:00,234 --> 00:03:02,133
用来演示最基础的

59
00:03:02,134 --> 00:03:07,133
在应用内通过探测

60
00:03:07,414 --> 00:03:09,373
用户是否已为该功能付费

61
00:03:09,374 --> 00:03:10,373
来决定是否开启某项功能的情况。

62
00:03:10,374 --> 00:03:13,163
让我们运行这个应用。

63
00:03:14,495 --> 00:03:16,013
你可以看见，

64
00:03:16,014 --> 00:03:19,613
我已经决定啦，这个长方形

65
00:03:19,614 --> 00:03:22,352
就是那个需要购买的功能。

66
00:03:22,353 --> 00:03:25,372
这个用户还没有购买这个长方形。

67
00:03:25,373 --> 00:03:27,892
他们会看见这个购买长方形的按钮，

68
00:03:27,893 --> 00:03:28,887
其实你也不一定要用一个按钮，

69
00:03:28,888 --> 00:03:30,289
其实你用一个链接也行，什么东西都可以，

70
00:03:30,290 --> 00:03:31,648
只要是你喜欢的，

71
00:03:31,649 --> 00:03:36,648
并且可以用来向用户

72
00:03:36,650 --> 00:03:38,128
显示购买流程的就可以了。

73
00:03:38,129 --> 00:03:39,327
假如我是那个用户，我就确定了：

74
00:03:39,328 --> 00:03:41,848
我们就把这个长方形买下来吧！

75
00:03:41,849 --> 00:03:44,808
你可以看见一个

76
00:03:44,809 --> 00:03:46,928
模拟购买过程的弹出窗口，

77
00:03:46,929 --> 00:03:49,947
这是当前这个 App 的一个模拟 UI

78
00:03:49,948 --> 00:03:51,628
我会想你展示，

79
00:03:51,629 --> 00:03:55,203
用来弹出这个窗口的代码：

80
00:03:55,204 --> 00:03:57,476
你可以看见被称为 MyInappOfferToken

81
00:03:57,477 --> 00:04:00,998
的内购选项（in-app offer token）

82
00:04:00,999 --> 00:04:03,078
这个返回的代码，

83
00:04:03,079 --> 00:04:06,356
展示了激活是否成功·，

84
00:04:06,357 --> 00:04:08,775
是否有输入无效的参数 （invalid arguments）

85
00:04:10,217 --> 00:04:12,537
所以我们可以测试很多不同的情况

86
00:04:12,538 --> 00:04:14,556
来确定我们的 app

87
00:04:14,557 --> 00:04:15,996
是否已经达到了可以连接应用商店 （Store）

88
00:04:15,997 --> 00:04:20,243
来进行内购的标准。

89
00:04:20,244 --> 00:04:22,384
这里我就直接确定为

90
00:04:22,385 --> 00:04:25,185
返回的值是正确的。

91
00:04:25,186 --> 00:04:26,568
所以我点击 “继续”

92
00:04:26,569 --> 00:04:29,028
所以你会发现 “购买” 按钮消失了

93
00:04:29,029 --> 00:04:32,297
而一个用户刚刚购买的红色的长方形

94
00:04:35,288 --> 00:04:39,023
显示了出来。

95
00:04:39,836 --> 00:04:42,461
让我来展示这是怎么实现的：

96
00:04:42,462 --> 00:04:46,471
首先，你要理解

97
00:04:55,602 --> 00:04:59,281
有一个保存所有内购状态的本地文件

98
00:05:02,442 --> 00:05:05,161
这个文件也可以用来保存应用是否在 “试用” 状态

99
00:05:05,162 --> 00:05:10,161
这个文件叫 WindowsStoreProxy.xml

100
00:05:10,222 --> 00:05:12,401
如果你回头看一下那个网页，

101
00:05:12,402 --> 00:05:14,840
它有提到这个文件在用户本地磁盘上的位置。

102
00:05:16,382 --> 00:05:18,601
所以你可以去你自己的硬盘里看看

103
00:05:18,602 --> 00:05:20,861
如果你曾经购买过应用，

104
00:05:20,862 --> 00:05:24,641
或者你曾经在应用内

105
00:05:24,642 --> 00:05:26,761
进行过内购的话，

106
00:05:26,762 --> 00:05:28,061
你就能找到这个文件。

107
00:05:28,062 --> 00:05:31,271
我不确定它会不会展示给你看……

108
00:05:34,362 --> 00:05:35,830
我之前还没有花时间看过

109
00:05:35,831 --> 00:05:40,250
别的应用的相应文件

110
00:05:40,251 --> 00:05:42,309
但如果你看看这个路径：

111
00:05:42,310 --> 00:05:45,690
userprofile/appdata/local/packages

112
00:05:45,691 --> 00:05:46,770
无所谓包名是什么

113
00:05:46,771 --> 00:05:48,850
它应该是一个又大又长的 GUID

114
00:05:48,851 --> 00:05:52,704
/localstate/microsoft/windowsstore/apidata

115
00:05:52,705 --> 00:05:57,163
/windowsstoreproxy.xml.

116
00:05:57,164 --> 00:05:58,524
然后你应该能看建一个类似的文件。

117
00:06:01,065 --> 00:06:03,664
让我用记事本打开它

118
00:06:03,665 --> 00:06:06,944
请注意这只是一个样本

119
00:06:06,945 --> 00:06:11,764
这是一个来自于模板应用的样本

120
00:06:14,185 --> 00:06:16,403
我用这个创建了这个样本，稍加编辑

121
00:06:16,404 --> 00:06:20,479
并把这个版本添加到我的 Assets directory 里去

122
00:06:23,421 --> 00:06:25,339
很快我们会在提起这个

123
00:06:25,340 --> 00:06:28,080
它会包含

124
00:06:28,081 --> 00:06:30,660
列表信息（listing information）, App 的名称（the name of the app）,

125
00:06:30,661 --> 00:06:34,380
App 的描述（the description of the app）, App 的价格（the price of the app）

126
00:06:34,381 --> 00:06:36,860
以及这个 App 所发售的市场。

127
00:06:38,261 --> 00:06:41,701
然后，它也包含在 App 的内部

128
00:06:41,702 --> 00:06:45,560
可以被单独购买的内购选项。

129
00:06:45,561 --> 00:06:47,701
所以会有两种不同的产品类型，

130
00:06:47,702 --> 00:06:49,221
有一种是

131
00:06:49,222 --> 00:06:51,420
长期的、持久的 （durable product type）,

132
00:06:51,421 --> 00:06:52,880
很明显他会在你拥有它的期间有用，

133
00:06:52,881 --> 00:06:55,061
也有可被消费的类型（consumable product types）

134
00:06:55,062 --> 00:06:58,281
比如说游戏里的礼品券啦~

135
00:07:01,382 --> 00:07:03,301
比如说在游戏里，

136
00:07:03,302 --> 00:07:05,521
你可以购买金币，

137
00:07:05,522 --> 00:07:07,120
然后逐渐把金币花出去。

138
00:07:07,121 --> 00:07:10,221
这就是可被消费的应用内购。

139
00:07:10,222 --> 00:07:12,260
但我也可以再氪金 $2 或者 $5

140
00:07:12,261 --> 00:07:15,701
那就是一个持久的内购类型。

141
00:07:18,762 --> 00:07:21,916
我要用那个应用内购的名称……

142
00:07:25,217 --> 00:07:28,636
当然价钱也是必不可少的，

143
00:07:28,637 --> 00:07:32,657
在这个市场里是用美金结算的，

144
00:07:32,658 --> 00:07:35,316
你可以看见这个市场是使用英语的美国市场，

145
00:07:35,317 --> 00:07:37,177
我也可以为不同的语言和地区

146
00:07:37,178 --> 00:07:40,077
分配不同的结算货币和价格。

147
00:07:40,078 --> 00:07:43,612
每个内购都会有自己的产品 ID （product ID）,

148
00:07:43,613 --> 00:07:46,269
你可以看见它们会引用下面的

149
00:07:46,270 --> 00:07:50,054
证书信息 （license information）.

150
00:07:50,055 --> 00:07:52,374
恩，现在你上面有了列表信息，

151
00:07:52,375 --> 00:07:55,594
包括了App 本身以及它的内购信息，

152
00:07:55,595 --> 00:07:58,155
然后是相关的许可信息

153
00:08:00,135 --> 00:08:03,255
因为我们要购买并激活一个长期的应用内购，

154
00:08:03,256 --> 00:08:05,795
所以这部分会是我们最关心的。

155
00:08:07,115 --> 00:08:10,154
首先，这个 App 本身是可用的吗？

156
00:08:10,155 --> 00:08:13,270
用户购买了这个 App 了吗？

157
00:08:13,271 --> 00:08:16,779
如果 IsActive 值为真 （True） 那么他们可以使用这个 App，

158
00:08:16,780 --> 00:08:18,976
如果是假 （False） 那就不可以啦 ヽ(´Д｀)ﾉ

159
00:08:18,977 --> 00:08:20,837
你也有可能有一个试用模式，

160
00:08:20,838 --> 00:08:23,736
并定义这个试用期的长度，

161
00:08:23,737 --> 00:08:26,857
在这里我们没有一个试用模式，

162
00:08:26,858 --> 00:08:29,890
所以我们可以关掉它并设为假 （False）

163
00:08:29,891 --> 00:08:32,131
注意，这里是这个视频的重点！

164
00:08:32,132 --> 00:08:36,031
就是验证这个内购选项的应用 ID （product ID）

165
00:08:36,032 --> 00:08:39,231
是否是可用的！

166
00:08:39,232 --> 00:08:44,011
我们来看看，

167
00:08:44,012 --> 00:08:48,410
我使用这个通用模板 （General Template）

168
00:08:48,411 --> 00:08:52,307
哦不好意思，我是说，创建了针对这个 App 的 test.xml

169
00:08:54,488 --> 00:08:57,087
我把市场信息（market data）什么的留空了，

170
00:08:57,088 --> 00:08:58,768
因为那些暂时并不是我们关心的

171
00:09:01,969 --> 00:09:06,148
我们要关注的是英语（美国）市场的 MyInappOfferToken 的产品 ID

172
00:09:12,388 --> 00:09:14,707
其实我可以把名字起得好一点点……

173
00:09:19,939 --> 00:09:24,890
这就是文件底部了，许可证书信息。

174
00:09:24,891 --> 00:09:27,870
我将 IsActive 设为假 （False）。

175
00:09:27,871 --> 00:09:29,850
运行应用……

176
00:09:29,851 --> 00:09:31,750
它会读取这个文件，

177
00:09:31,751 --> 00:09:35,271
应用会知道这个 App 里可用的内购选项，

178
00:09:38,911 --> 00:09:41,738
并知道我现在并没有这个功能 ╮(╯▽╰)╭

179
00:09:41,739 --> 00:09:44,817
所以就会展示这个购买按钮

180
00:09:46,499 --> 00:09:50,857
我购买以后，它就会把 IsActive 的值改为真 （True）

181
00:09:53,970 --> 00:09:56,467
注意！

182
00:09:56,468 --> 00:09:58,386
当我们在 debug 的时候，

183
00:09:58,387 --> 00:10:03,386
这个当前应用模拟器里跑的应用

184
00:10:04,088 --> 00:10:07,506
是不会把这个值真的写入到本地文件里的。

185
00:10:07,507 --> 00:10:09,747
所以如果我想要

186
00:10:09,748 --> 00:10:11,983
一次或多次地测试

187
00:10:11,984 --> 00:10:14,684
在打开 App 前已经购买了的情况

188
00:10:14,685 --> 00:10:16,303
那我把这个值改为真就好，

189
00:10:16,304 --> 00:10:18,504
然后重启因员工。

190
00:10:19,724 --> 00:10:21,451
可以看见现在默认为你已经购买了

191
00:10:22,457 --> 00:10:25,127
这就是那个已经被购买的红色三角形，

192
00:10:28,237 --> 00:10:29,996
当你想要用这些东西的时候有一些东西时要注意的，

193
00:10:29,997 --> 00:10:31,796
让我们来看看代码：

194
00:10:32,857 --> 00:10:35,336
我把东西都写在了 MainPage.xaml.cs 里

195
00:10:35,337 --> 00:10:37,976
显然如果你在写一些

196
00:10:37,977 --> 00:10:42,035
应用范围更广泛的东西的时候，

197
00:10:42,036 --> 00:10:43,776
你会把这个放在App.xaml.cs 文件里

198
00:10:46,516 --> 00:10:50,004
并从 App 的其它部分调用它，

199
00:10:51,015 --> 00:10:53,951
在页面加载的时候，

200
00:10:53,952 --> 00:10:57,252
你可以看见这很重要的一小部分

201
00:10:57,253 --> 00:11:01,551
有一些围绕它的注释，

202
00:11:01,552 --> 00:11:05,390
这是我们刚刚看到的加载 test.xml 文件的地方

203
00:11:10,633 --> 00:11:12,691
我要让当前的 App 模拟器重新加载这个测试文件，

204
00:11:18,812 --> 00:11:23,811
当我准备好提交这个应用到商店里的时候

205
00:11:23,931 --> 00:11:26,490
我会把这个部分注释掉

206
00:11:26,491 --> 00:11:28,290
或者是直接删除。

207
00:11:28,291 --> 00:11:29,389
或许我还是把它注释掉比较好，

208
00:11:29,390 --> 00:11:31,870
因为即使我发布了这个应用后

209
00:11:31,871 --> 00:11:34,210
还是要继续测试的嘛！

210
00:11:35,811 --> 00:11:39,810
当然，要把所有引用（reference） 当前应用模拟器 （Current App Simulator） 的地方

211
00:11:39,811 --> 00:11:44,123
全部改为 CurrentApp.LicenseInformation。

212
00:11:46,645 --> 00:11:50,924
无论什么时候，我都可以引用 App 的证书信息，

213
00:11:50,925 --> 00:11:53,636
然后看看各个内购产品的证书，

214
00:11:53,637 --> 00:11:57,276
然后：问问

215
00:11:57,277 --> 00:12:01,056
我这个叫 MyInappOfferToken 的东西

216
00:12:01,057 --> 00:12:02,176
它是激活的吗？

217
00:12:02,177 --> 00:12:04,776
如果是激活的，那我就可以

218
00:12:04,777 --> 00:12:09,136
让红色长方形可见并隐藏购买按钮。

219
00:12:09,137 --> 00:12:13,476
这几行代码就起到了这个作用，

220
00:12:13,477 --> 00:12:17,056
当购买按钮被点击的时候，

221
00:12:17,057 --> 00:12:18,857
我们要确保

222
00:12:18,858 --> 00:12:23,857
这个 In-App Purchase Token 还没有被激活，

223
00:12:26,317 --> 00:12:28,416
如果是已经被激活了的，

224
00:12:28,417 --> 00:12:30,335
那我们这个 App 的逻辑就有问题了，

225
00:12:30,336 --> 00:12:31,777
这是不应该发生的。

226
00:12:31,778 --> 00:12:34,516
恩我们把这个搞定了。

227
00:12:37,057 --> 00:12:38,556
假设我们还没有购买

228
00:12:38,557 --> 00:12:41,332
我们想要调用 RequestProductPurchaseAsync()

229
00:12:41,333 --> 00:12:45,871
然后把这个 Token 传递进去

230
00:12:53,573 --> 00:12:57,252
恩，CurrentAppSimulator.RequestProductPurchaseAsync()

231
00:12:57,253 --> 00:12:59,492
这就会弹出一个弹窗，

232
00:12:59,493 --> 00:13:01,371
这是一个在手机上，在电脑上都可以用的通用对话框

233
00:13:01,372 --> 00:13:04,212
然后让用户自己去决定是否要买买买。

234
00:13:09,712 --> 00:13:12,633
比如说 $2, $5 这样子的内购。

235
00:13:15,045 --> 00:13:17,517
完成后我们会获得一个购买结果，

236
00:13:17,518 --> 00:13:19,451
这个结果会告诉我们

237
00:13:19,452 --> 00:13:22,991
用户是不是成功购买了，

238
00:13:22,992 --> 00:13:25,391
有可能是交易成功，也有可能是交易失败，

239
00:13:25,392 --> 00:13:27,752
还有可能是已经被购买了。

240
00:13:27,753 --> 00:13:30,791
如果成功了，

241
00:13:30,792 --> 00:13:33,231
那我们就调整 app 的状态，

242
00:13:36,813 --> 00:13:38,684
这里我们把长方形变为可见的，

243
00:13:40,185 --> 00:13:42,024
这就是全部了。

244
00:13:42,025 --> 00:13:43,684
我知道这听起来挺困难的，

245
00:13:43,685 --> 00:13:46,345
但其实你自己动手就会发现挺简单的。

246
00:13:46,346 --> 00:13:49,924
很明显应用内购是

247
00:13:49,925 --> 00:13:53,130
通过应用活力的最佳方式之一，

248
00:13:53,131 --> 00:13:54,610
因为你让用户下载了这个应用，

249
00:13:54,611 --> 00:13:57,071
而体验过以后，那些有购买能力和意愿的

250
00:13:57,072 --> 00:13:59,310
高阶用户会更愿意去为这些额外的功能付钱。

251
00:14:05,011 --> 00:14:07,088
现在我想要把这些我们这节课学到的东西

252
00:14:07,089 --> 00:14:11,688
应用到我们的应用里

253
00:14:11,689 --> 00:14:16,688
我要先把这个移开屏幕，

254
00:14:18,489 --> 00:14:20,628
我要跳回到

255
00:14:20,629 --> 00:14:24,334
相册封面匹配游戏里了(#‵ ′)

256
00:14:28,445 --> 00:14:30,667
我要做的是设置广告控件 （Ad Mediator Control） 的可见度

257
00:14:30,668 --> 00:14:35,270
最开始是以收回的状态

258
00:14:38,271 --> 00:14:41,930
这里我就简单一点

259
00:14:41,931 --> 00:14:43,062
看起来可能不好看

260
00:14:43,063 --> 00:14:45,602
但我就直接放个按钮

261
00:14:45,603 --> 00:14:48,622
然后起个名字：

262
00:14:48,623 --> 00:14:52,523
名字叫 “购买按钮” （PurchaseButton）

263
00:14:56,644 --> 00:14:58,442
点击事件名为 PurchaseButton_Click.

264
00:14:58,443 --> 00:15:03,442
内容设置为 “去除广告” （Remove Ads）

265
00:15:08,563 --> 00:15:10,049
很快我们就会开始纠结把它放在哪里，看起来怎么样了……

266
00:15:10,050 --> 00:15:12,169
但现在先不关心这个。

267
00:15:17,010 --> 00:15:19,820
把它放在同一个 Grid Cell 里面

268
00:15:21,230 --> 00:15:26,229
用分隔线隔开，像这样

269
00:15:27,951 --> 00:15:32,950
现在我们要进入点击事件

270
00:15:33,625 --> 00:15:35,605
像这样

271
00:15:35,606 --> 00:15:39,524
添加一个新项目 （item）

272
00:15:39,525 --> 00:15:41,624
不好意思它右侧有点超出了

273
00:15:41,625 --> 00:15:44,484
新建一个 XML 文件

274
00:15:44,485 --> 00:15:46,545
随便起个名字

275
00:15:46,546 --> 00:15:51,334
像现在把它叫做 test

276
00:15:53,205 --> 00:15:57,545
进入刚刚新建的 test.xml 文件

277
00:16:00,306 --> 00:16:03,104
还记得刚刚我们看过的那个内购范例嘛？

278
00:16:03,105 --> 00:16:05,165
我会把它直接复制粘贴到这里，

279
00:16:10,274 --> 00:16:11,466
我可能需要

280
00:16:11,467 --> 00:16:12,986
修改一些东西，比如 App 的名字

281
00:16:12,987 --> 00:16:17,986
配对游戏……（AlbumCoverMatchGame）

282
00:16:18,807 --> 00:16:23,806
描述，享受猜歌名的乐趣

283
00:16:24,807 --> 00:16:29,806
从你的音乐库里提取的专辑封面，

284
00:16:34,627 --> 00:16:36,253
价格免费。

285
00:16:36,254 --> 00:16:41,253
恩，我们就让它免费吧

286
00:16:43,166 --> 00:16:46,129
这里是应用内购列表 MyInappOfferToken.

287
00:16:46,130 --> 00:16:48,989
好吧我想给它改名

288
00:16:48,990 --> 00:16:53,989
“去广告” （"RemoveAdsOffer"）

289
00:16:54,870 --> 00:16:58,539
就这么叫

290
00:16:58,540 --> 00:17:03,539
"去除应用内的广告".

291
00:17:05,680 --> 00:17:09,459
价格设为 $1

292
00:17:09,460 --> 00:17:12,808
粘贴产品 ID

293
00:17:12,809 --> 00:17:17,108
把激活状态 IsActive 设为假 （False）

294
00:17:18,690 --> 00:17:22,549
这就是我们需要做的一切。

295
00:17:23,300 --> 00:17:25,079
现在先把它关掉

296
00:17:29,660 --> 00:17:31,299
然后复制我们已经在范例里写好的

297
00:17:31,300 --> 00:17:34,799
代码到这里面。

298
00:17:38,260 --> 00:17:40,119
在这里开始

299
00:17:40,120 --> 00:17:43,680
页面载入事件 （Page_Loaded event）

300
00:17:45,320 --> 00:17:47,549
复制粘贴！

301
00:17:48,100 --> 00:17:50,200
因为没什么需要改的……

302
00:17:57,779 --> 00:18:01,716
我需要弄到那个东西……叫什么来着？

303
00:18:01,938 --> 00:18:04,247
对，“去广告” （Remove ads offer）

304
00:18:05,524 --> 00:18:10,016
我觉得我需要重新粘贴一次，

305
00:18:10,017 --> 00:18:11,375
搞定。

306
00:18:11,376 --> 00:18:13,455
你可以看见我们有一些红色的波浪线，

307
00:18:13,456 --> 00:18:15,601
让我们解决这些问题，

308
00:18:15,602 --> 00:18:17,307
你可以看见我的全屏

309
00:18:17,308 --> 00:18:19,828
我们点击 control period

310
00:18:19,829 --> 00:18:24,137
开始添加 using statements

311
00:18:26,535 --> 00:18:28,773
对于 App 模拟器来说，点击 using statements

312
00:18:28,774 --> 00:18:33,120
在 Windows.ApplicationModel.Store 里

313
00:18:33,121 --> 00:18:36,410
这应该可以解决大部分问题，

314
00:18:37,601 --> 00:18:41,300
哦对了这个 App 的许可证……

315
00:18:41,301 --> 00:18:46,122
我将它新建为一个 MainPage.XAML 公有的（public）属性

316
00:18:53,373 --> 00:18:56,332
在这里，在私有的（private）上面

317
00:18:56,333 --> 00:18:58,939
粘贴……

318
00:18:58,940 --> 00:19:03,939
属性，tab，tab，证书信息对象（license information object）, 它是这个类型的 （type）,

319
00:19:04,752 --> 00:19:08,671
Windows.ApplicationModel.Store.LicenseInformation

320
00:19:08,672 --> 00:19:10,911
命名为 AppLicenseInformation

321
00:19:10,912 --> 00:19:14,072
默认设置，

322
00:19:14,073 --> 00:19:15,552
保留默认设置就好

323
00:19:15,553 --> 00:19:17,371
现在你可以看见出现了红色曲线

324
00:19:20,313 --> 00:19:24,691
因为这里应该有一个异步关键字

325
00:19:24,692 --> 00:19:29,691
在方法签名里（method signature）

326
00:19:32,252 --> 00:19:36,671
这明显不是我们想要的

327
00:19:36,672 --> 00:19:39,771
我们需要重新考虑一下

328
00:19:39,772 --> 00:19:41,631
其实挺简单的不是么？

329
00:19:44,912 --> 00:19:49,672
因为我们有 Ad Mediator Control 的名字

330
00:19:50,272 --> 00:19:55,271
设置 Visibility 等于 Visibility.Collapsed

331
00:19:57,634 --> 00:20:00,800
如果他们还没购买

332
00:20:00,801 --> 00:20:05,399
如果还没购买我们就设置

333
00:20:05,400 --> 00:20:10,399
Visibility 等于可见 （Visable）

334
00:20:12,601 --> 00:20:13,852
按钮也一样。

335
00:20:13,853 --> 00:20:16,072
我刚刚这个按钮被名为什么来着？

336
00:20:16,073 --> 00:20:18,472
哦 PurchaseButton，棒极了~

337
00:20:18,473 --> 00:20:19,653
reserve 会被打开……

338
00:20:19,654 --> 00:20:20,952
购买按钮的可见性……

339
00:20:20,953 --> 00:20:25,952
那么 PurchaseButton.Visability 等于 Visibility.Visible

340
00:20:26,013 --> 00:20:31,012
然后 reverse 值为真

341
00:20:37,308 --> 00:20:39,320
好的。

342
00:20:39,851 --> 00:20:41,390
最后一点微小的工作

343
00:20:41,391 --> 00:20:46,390
就是找到点击事件

344
00:20:47,231 --> 00:20:52,230
然后

345
00:21:01,171 --> 00:21:04,090
把弹出购买窗口，传递进去

346
00:21:04,091 --> 00:21:07,991
同样的，异步

347
00:21:07,992 --> 00:21:12,991
然后需要我的选项的名字

348
00:21:13,512 --> 00:21:16,790
我把它设为一个定值（constant）

349
00:21:16,791 --> 00:21:18,011
而不是满世界用这些神奇的字符串

350
00:21:23,538 --> 00:21:26,757
显然我们需要修改这个，

351
00:21:26,758 --> 00:21:29,657
如果购买成功了那么就是说

352
00:21:29,658 --> 00:21:34,217
我们可以去除广告了，

353
00:21:34,218 --> 00:21:36,963
复制这两行代码

354
00:21:36,964 --> 00:21:39,523
用这个替代，

355
00:21:39,524 --> 00:21:42,293
你看见这多么简单了吗？

356
00:21:43,884 --> 00:21:46,023
我有点关心这个按钮出现的位置，

357
00:21:49,004 --> 00:21:50,003
现在的情况……

358
00:21:50,004 --> 00:21:52,944
按钮在控件正上方，

359
00:21:52,945 --> 00:21:54,063
看看怎么样

360
00:21:54,064 --> 00:21:57,434
好看就让它去吧，

361
00:22:05,804 --> 00:22:07,793
诶诶诶，我看不见我的按钮咧……

362
00:22:13,784 --> 00:22:16,393
按钮你跑到哪里去了？

363
00:22:17,484 --> 00:22:18,683
注意到一件事情

364
00:22:18,684 --> 00:22:20,943
刚刚拖放控件到这里的时候，

365
00:22:20,944 --> 00:22:23,143
留了一个巨大的负边距……

366
00:22:23,144 --> 00:22:26,810
我不知道我应不应该留这个边距

367
00:22:26,811 --> 00:22:29,419
试试看

368
00:22:32,270 --> 00:22:34,432
VerticalAlignment 等于 "Top".

369
00:22:34,433 --> 00:22:38,909
HorizontalAlignment 等于 "Right".

370
00:22:38,910 --> 00:22:41,179
看看效果

371
00:22:48,111 --> 00:22:51,099
依旧看不见，按钮你跑到哪去了？

372
00:22:56,090 --> 00:22:58,239
我缺了什么呢？

373
00:22:58,350 --> 00:22:59,349
哦你知道吗？

374
00:22:59,350 --> 00:23:02,029
我真是太蠢了

375
00:23:02,030 --> 00:23:02,949
问题在这

376
00:23:02,950 --> 00:23:05,029
这和之前的情况不一样，

377
00:23:05,030 --> 00:23:07,149
你可能正坐着，说：“

378
00:23:07,150 --> 00:23:11,179
"Bob, 你忘了这个"

379
00:23:12,791 --> 00:23:16,249
如果你购买了，它就应该消失了，

380
00:23:16,250 --> 00:23:21,249
而不是像之前一样展示一些新东西给我们，

381
00:23:23,130 --> 00:23:26,869
我们现在想要的是隐藏这些东西，

382
00:23:26,870 --> 00:23:29,589
也就是隐藏购买按钮和广告展示栏，

383
00:23:29,590 --> 00:23:32,069
都要藏起来。

384
00:23:32,070 --> 00:23:34,009
尴尬……抱歉……

385
00:23:34,010 --> 00:23:36,669
当你直播写代码的时候，

386
00:23:36,670 --> 00:23:39,179
就会这样 hhh

387
00:23:45,420 --> 00:23:47,695
可能你想要加一点边距

388
00:23:47,696 --> 00:23:49,075
微调一下让它更好看

389
00:23:49,076 --> 00:23:52,095
但我们就直接点击 Remove Ads

390
00:23:52,976 --> 00:23:57,975
”嘿，让我们去除广告吧~“ 棒极了~

391
00:23:59,236 --> 00:24:02,725
我们随便选一首曲子

392
00:24:04,557 --> 00:24:05,955
这个 App 基本完成了，

393
00:24:05,956 --> 00:24:08,135
正如我说的，

394
00:24:08,136 --> 00:24:10,375
我真的需要一个设计师，

395
00:24:10,376 --> 00:24:13,155
让整个 App 看起来更好一点

396
00:24:13,156 --> 00:24:18,155
比如更好地布局等等

397
00:24:22,557 --> 00:24:27,556
这里我就在广告控件那里添加一点点边距

398
00:24:27,876 --> 00:24:32,055
同样地为按钮添加一点。

399
00:24:32,056 --> 00:24:33,415
让我想一想……

400
00:24:33,416 --> 00:24:38,415
我想要设一个边距……

401
00:24:40,036 --> 00:24:45,035
左侧 10，顶部 10

402
00:24:46,136 --> 00:24:46,841
我想我需要

403
00:24:46,842 --> 00:24:48,862
在这里留更多空间。

404
00:24:48,863 --> 00:24:53,862
在这留个 100？

405
00:24:55,162 --> 00:24:56,440
row definition 设置为 110

406
00:24:56,441 --> 00:25:01,440
因为 90+10+10

407
00:25:01,822 --> 00:25:05,531
这块我们就简略一些吧

408
00:25:07,683 --> 00:25:09,842
这里也一样，

409
00:25:09,843 --> 00:25:14,842
边距 10，看看怎么样

410
00:25:24,763 --> 00:25:26,581
把它移到右手边下侧，

411
00:25:26,582 --> 00:25:30,851
额看起来有点学院派？

412
00:25:32,722 --> 00:25:35,511
或许需要一个好的 logo

413
00:25:35,983 --> 00:25:38,571
显然需要更好的设计……

414
00:25:39,622 --> 00:25:42,813
这个项目的重点，

415
00:25:42,814 --> 00:25:47,813
在于访问库里所有的文件，

416
00:25:50,753 --> 00:25:53,972
包括迭代

417
00:25:53,973 --> 00:25:56,032
以及获取。

418
00:25:56,033 --> 00:25:59,693
我们学会了如何使用 KnownFolders.Library

419
00:25:59,694 --> 00:26:02,512
如何在本地计算机访问

420
00:26:02,513 --> 00:26:04,451
所有的音乐集。

421
00:26:04,452 --> 00:26:06,966
另外呢，

422
00:26:06,967 --> 00:26:11,186
我们也示范了如何通过添加广告来获利，

423
00:26:11,187 --> 00:26:12,706
以及

424
00:26:12,707 --> 00:26:14,226
添加应用内购买来去除广告，

425
00:26:14,227 --> 00:26:16,006
正如我们这节课所做的。

426
00:26:16,007 --> 00:26:18,346
我想这就是我们想要演示的一切。

427
00:26:18,347 --> 00:26:20,266
应该没有别的了吧？

428
00:26:20,267 --> 00:26:24,546
哦！播放媒体，以及取回文件并播放，

429
00:26:24,547 --> 00:26:29,546
以及大量的用来决定播放什么和

430
00:26:29,567 --> 00:26:32,145
如何播放的逻辑。

431
00:26:32,146 --> 00:26:36,086
以及不断得分之类的东西。

432
00:26:36,087 --> 00:26:40,206
希望这个项目能在这些方面帮助增进你的了解。

433
00:26:40,207 --> 00:26:42,386
一个大新闻！

434
00:26:42,387 --> 00:26:43,906
我们还有一个剩下的项目，

435
00:26:43,907 --> 00:26:45,446
它将会是一个非常有趣得昂木，

436
00:26:45,447 --> 00:26:46,945
因为我们会用到 Marvel API

437
00:26:46,946 --> 00:26:48,745
我为此真的很激动啊！

438
00:26:48,746 --> 00:26:52,715
下节课见！谢谢大家！

