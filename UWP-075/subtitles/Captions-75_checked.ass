[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1280
PlayResY: 720

[Aegisub Project Garbage]
Audio File: ../uwp75HeroExplorerDisplayingYourHeroesInformation_mid.mp4
Video File: ../uwp75HeroExplorerDisplayingYourHeroesInformation_mid.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.875000
Scroll Position: 275
Active Line: 280
Video Position: 32191

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Microsoft YaHei UI,35,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,1,2,2,10,10,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:05.22,Default,,0,0,0,,英雄浏览器 -- 显示角色信息 （翻译：陈继民，审核：章程）
Dialogue: 0,0:00:05.22,0:00:08.68,Default,,0,0,0,,这节课的目标就是去把关于
Dialogue: 0,0:00:08.69,0:00:13.18,Default,,0,0,0,,我们在列表中选择的角色的相关信息显示出来
Dialogue: 0,0:00:13.18,0:00:18.88,Default,,0,0,0,,我们希望展示角色的大图像版本的
Dialogue: 0,0:00:18.88,0:00:22.79,Default,,0,0,0,,还有他（她）们的名字、他（她）们的描述
Dialogue: 0,0:00:22.79,0:00:25.99,Default,,0,0,0,,然后，最终我们会在下一节课中展示
Dialogue: 0,0:00:25.99,0:00:29.19,Default,,0,0,0,,关于这个特定角色所相关的漫画
Dialogue: 0,0:00:29.19,0:00:31.93,Default,,0,0,0,,至少是最近的一本漫画书
Dialogue: 0,0:00:31.93,0:00:34.49,Default,,0,0,0,,另外还有一件事
Dialogue: 0,0:00:34.49,0:00:35.61,Default,,0,0,0,,我想在这节课里讲述的是
Dialogue: 0,0:00:35.61,0:00:40.50,Default,,0,0,0,,有时候 API 可能只会返回几个
Dialogue: 0,0:00:41.66,0:00:45.72,Default,,0,0,0,,满足我们这里条件的角色
Dialogue: 0,0:00:45.72,0:00:47.65,Default,,0,0,0,,大部分可能并不包含thumbnails.
Dialogue: 0,0:00:47.65,0:00:50.85,Default,,0,0,0,,我们可能会得到一个错误，无论我们是什么时候调用这个方法
Dialogue: 0,0:00:50.85,0:00:53.82,Default,,0,0,0,,穿过互联网得到资源
Dialogue: 0,0:00:53.82,0:00:57.57,Default,,0,0,0,,The Marvel comics（惊奇漫画） API 服务可能出了问题
Dialogue: 0,0:00:57.57,0:01:01.31,Default,,0,0,0,,返回的JSON可能有缺陷或者
Dialogue: 0,0:01:01.31,0:01:03.54,Default,,0,0,0,,格式并不完全正确
Dialogue: 0,0:01:03.54,0:01:08.15,Default,,0,0,0,,当我们到这一步的时候JSON返回了我们就要做
Dialogue: 0,0:01:08.15,0:01:11.69,Default,,0,0,0,,这总是让我很紧张的很紧张反序列化
Dialogue: 0,0:01:11.69,0:01:14.85,Default,,0,0,0,,JSON到我们的对象图里面
Dialogue: 0,0:01:14.85,0:01:16.24,Default,,0,0,0,,这可能会出问题
Dialogue: 0,0:01:16.24,0:01:19.79,Default,,0,0,0,,所以我需要一个策略
Dialogue: 0,0:01:19.79,0:01:24.46,Default,,0,0,0,,来恢复当应用无法成功获取
Dialogue: 0,0:01:24.46,0:01:27.73,Default,,0,0,0,,它所需要的一切
Dialogue: 0,0:01:27.73,0:01:28.98,Default,,0,0,0,,我们也会说一下这件事
Dialogue: 0,0:01:28.98,0:01:30.38,Default,,0,0,0,,但是让我们先从简单的地方开始吧
Dialogue: 0,0:01:30.38,0:01:34.62,Default,,0,0,0,,跳转到我们的mainpage.xaml.
Dialogue: 0,0:01:34.62,0:01:40.73,Default,,0,0,0,, 我要做的就是补充完整这个Grid
Dialogue: 0,0:01:40.73,0:01:43.15,Default,,0,0,0,,details grid（细节网格）grid detail（网格细节）//萌Bob卖萌了
Dialogue: 0,0:01:44.72,0:01:47.21,Default,,0,0,0,,细节网格
Dialogue: 0,0:01:47.21,0:01:50.53,Default,,0,0,0,,好，转到代码页面（这里应该是说屏幕切换到VS）
Dialogue: 0,0:01:50.53,0:01:55.42,Default,,0,0,0,,我这里要做的就是创建RowDefinitions.
Dialogue: 0,0:01:58.68,0:02:06.90,Default,,0,0,0,,这里应该有三个不同的区域
Dialogue: 0,0:02:06.90,0:02:10.80,Default,,0,0,0,,最顶部一行
Dialogue: 0,0:02:14.39,0:02:17.07,Default,,0,0,0,,会用于显示角色的细节
Dialogue: 0,0:02:17.07,0:02:21.31,Default,,0,0,0,,第二行，会用于我们显示与角色最近相关的
Dialogue: 0,0:02:21.31,0:02:24.27,Default,,0,0,0,,漫画，最后
Dialogue: 0,0:02:24.27,0:02:26.98,Default,,0,0,0,,当你点击任一一本漫画，会显示
Dialogue: 0,0:02:26.98,0:02:32.12,Default,,0,0,0,,会在第三行展示当前这本漫画的细节
Dialogue: 0,0:02:32.12,0:02:34.13,Default,,0,0,0,,下一件事我们需要做的是
Dialogue: 0,0:02:34.13,0:02:37.31,Default,,0,0,0,,我们已经创建了我们的行定义
Dialogue: 0,0:02:37.31,0:02:39.96,Default,,0,0,0,,我们要来关注下第一个行定义
Dialogue: 0,0:02:39.96,0:02:42.39,Default,,0,0,0,,我们要在里面创建多一个Grid（嵌套在当前Grid中）
Dialogue: 0,0:02:42.39,0:02:45.96,Default,,0,0,0,,所以，记住我们现在要做什么，不要看混了
Dialogue: 0,0:02:45.96,0:02:47.28,Default,,0,0,0,,Grid.Row = 0
Dialogue: 0,0:02:47.28,0:02:51.09,Default,,0,0,0,,我们要确保水平对齐设置为左
Dialogue: 0,0:02:51.09,0:02:52.84,Default,,0,0,0,,这些应该大部分都应该设置为默认
Dialogue: 0,0:02:52.84,0:02:54.77,Default,,0,0,0,,我只是为了这个更加确定一些（默认为HorizontalAlignment="Left"  VerticalAlignment="Top"）
Dialogue: 0,0:02:58.11,0:03:02.84,Default,,0,0,0,,然后，在这个新的Grid里，我要创建一行
Dialogue: 0,0:03:02.84,0:03:07.52,Default,,0,0,0,,用来展示角色名字
Dialogue: 0,0:03:07.52,0:03:12.92,Default,,0,0,0,,创建第二行用来展示角色的描述
Dialogue: 0,0:03:12.92,0:03:14.08,Default,,0,0,0,,同时还有两列
Dialogue: 0,0:03:14.08,0:03:17.39,Default,,0,0,0,,左边一列用来展示图像
Dialogue: 0,0:03:17.39,0:03:21.91,Default,,0,0,0,,右边一列用来展示角色名字和角色描述
Dialogue: 0,0:03:21.91,0:03:23.71,Default,,0,0,0,,所以这就是一个2x2的Grid
Dialogue: 0,0:03:24.78,0:03:27.02,Default,,0,0,0,,所以 RowDefinitions //打代码ing
Dialogue: 0,0:03:27.02,0:03:31.24,Default,,0,0,0,,我们设置每一行高度为“*”
Dialogue: 0,0:03:32.67,0:03:36.38,Default,,0,0,0,,这给了它们相同的宽度
Dialogue: 0,0:03:37.76,0:03:39.52,Default,,0,0,0,,同样的方式处理列定义
Dialogue: 0,0:03:46.74,0:03:51.35,Default,,0,0,0,,第一列，我要设置为列宽度为自动（“Auto”）
Dialogue: 0,0:03:51.35,0:03:54.96,Default,,0,0,0,,第二列宽度设置为“*”
Dialogue: 0,0:03:54.96,0:03:56.68,Default,,0,0,0,,所有这些就是我们需要补充的地方了
Dialogue: 0,0:03:56.68,0:03:58.97,Default,,0,0,0,,不过这才是是个开始而已
Dialogue: 0,0:03:58.97,0:04:02.24,Default,,0,0,0,,我希望在左侧显示我的角色图像
Dialogue: 0,0:04:02.24,0:04:07.70,Default,,0,0,0,,所以设置Image Grid.Column = "0".
Dialogue: 0,0:04:07.70,0:04:12.31,Default,,0,0,0,,实际上，我想让它跨越两行
Dialogue: 0,0:04:12.31,0:04:17.98,Default,,0,0,0,,所以Grid.RowSpan="2".
Dialogue: 0,0:04:17.99,0:04:21.74,Default,,0,0,0,,我们还需要
Dialogue: 0,0:04:21.74,0:04:26.58,Default,,0,0,0,,程序化的添加它的内容
Dialogue: 0,0:04:26.58,0:04:29.94,Default,,0,0,0,,所以我要设置它的名字为DetailImage.
Dialogue: 0,0:04:31.48,0:04:35.93,Default,,0,0,0,,下一步是创建一个文本框
Dialogue: 0,0:04:35.93,0:04:38.07,Default,,0,0,0,,用来显示角色的名字
Dialogue: 0,0:04:38.07,0:04:40.15,Default,,0,0,0,,所以DetailNameTextBlock.
Dialogue: 0,0:04:44.27,0:04:47.49,Default,,0,0,0,,设置所属列为“1“（第二列）
Dialogue: 0,0:04:47.49,0:04:50.44,Default,,0,0,0,,同时
Dialogue: 0,0:04:50.44,0:04:54.30,Default,,0,0,0,,将字体调的比之前稍微大一点
Dialogue: 0,0:04:54.30,0:04:56.26,Default,,0,0,0,,所以字体设置为32
Dialogue: 0,0:04:56.26,0:05:00.51,Default,,0,0,0,,最后，创建多另外一个文本框
Dialogue: 0,0:05:00.51,0:05:03.77,Default,,0,0,0,,用来包含角色的描述
Dialogue: 0,0:05:03.78,0:05:05.57,Default,,0,0,0,,just like the thumbnail,
Dialogue: 0,0:05:05.57,0:05:09.02,Default,,0,0,0,,许多角色其实并没有关于他（她）们的角色描述
Dialogue: 0,0:05:11.66,0:05:15.42,Default,,0,0,0,,这问题倒不问题，不管有没有全部展示出来就可以了
Dialogue: 0,0:05:15.42,0:05:20.50,Default,,0,0,0,,设置Grid.Row="1" Grid.Column="1"
Dialogue: 0,0:05:20.50,0:05:23.75,Default,,0,0,0,,我在想我需要
Dialogue: 0,0:05:23.75,0:05:26.60,Default,,0,0,0,,设置文字的自动换行
Dialogue: 0,0:05:26.60,0:05:28.90,Default,,0,0,0,,因为角色的描述可能是一个段落
Dialogue: 0,0:05:28.90,0:05:31.26,Default,,0,0,0,,所以设置TextWrapping = ”Wrap".
Dialogue: 0,0:05:32.51,0:05:34.15,Default,,0,0,0,,让我换多一行，这样看起来好一点
Dialogue: 0,0:05:34.15,0:05:35.75,Default,,0,0,0,,这样子看起来就容易看得多了
Dialogue: 0,0:05:43.37,0:05:43.95,Default,,0,0,0,,很好
Dialogue: 0,0:05:48.32,0:05:50.03,Default,,0,0,0,,下一件我要做的事是
Dialogue: 0,0:05:50.03,0:05:52.19,Default,,0,0,0,,回到我们的列表视图，我需要确保
Dialogue: 0,0:05:52.19,0:05:54.48,Default,,0,0,0,,你确实可以点击到这些项
Dialogue: 0,0:05:54.48,0:06:00.34,Default,,0,0,0,,所以IsItemClickEnabled="true".
Dialogue: 0,0:06:00.34,0:06:07.85,Default,,0,0,0,,ItemClick="NewEventHandler" 创建新的事件处理程序
Dialogue: 0,0:06:07.85,0:06:13.34,Default,,0,0,0,,然后转到代码
Dialogue: 0,0:06:13.34,0:06:17.97,Default,,0,0,0,,使用键盘上的F12快捷键哦！
Dialogue: 0,0:06:17.97,0:06:25.18,Default,,0,0,0,,我们想要做的就是选择一个角色
Dialogue: 0,0:06:26.20,0:06:29.71,Default,,0,0,0,,所以项目单击事件的参数列表会给我们提供这个项
Dialogue: 0,0:06:29.71,0:06:33.91,Default,,0,0,0,,这个已经单击过了，这是一个角色的实例对象
Dialogue: 0,0:06:33.91,0:06:37.93,Default,,0,0,0,,只是很不幸的保存为了Object类型
Dialogue: 0,0:06:37.93,0:06:44.93,Default,,0,0,0,,所以我们需要把它强转为Character.
Dialogue: 0,0:06:44.93,0:06:48.87,Default,,0,0,0,,所以var selectedCharacter =
Dialogue: 0,0:06:53.63,0:06:56.63,Default,,0,0,0,,然后我就只需要添加剩下的简单的东西了
Dialogue: 0,0:06:56.63,0:07:03.70,Default,,0,0,0,,DetailNameTextBlock.Text =selectedCharacter.name.
Dialogue: 0,0:07:03.70,0:07:05.97,Default,,0,0,0,,对于角色描述，也是做同样的处理
Dialogue: 0,0:07:10.54,0:07:13.79,Default,,0,0,0,,现在，将角色图像用于Image来显示
Dialogue: 0,0:07:13.79,0:07:15.35,Default,,0,0,0,,会有一定小麻烦
Dialogue: 0,0:07:15.35,0:07:19.18,Default,,0,0,0,,我们需要创建一个位图对象
Dialogue: 0,0:07:19.18,0:07:22.65,Default,,0,0,0,,当我们映射好了我们的位图对象资源
Dialogue: 0,0:07:22.65,0:07:26.82,Default,,0,0,0,,可以把它设置为XAML中图像的控制来源
Dialogue: 0,0:07:26.82,0:07:27.76,Default,,0,0,0,,就这样子做把
Dialogue: 0,0:07:27.76,0:07:28.93,Default,,0,0,0,,你可能会想要把这些小窍门保存为
Dialogue: 0,0:07:28.93,0:07:29.48,Default,,0,0,0,,保存为你的小抄
Dialogue: 0,0:07:35.98,0:07:40.91,Default,,0,0,0,,现在BitmapImage对象需要我们引用一些命名空间
Dialogue: 0,0:07:40.91,0:07:45.19,Default,,0,0,0,,Windows.Ui.Xaml.Media.Imaging,
Dialogue: 0,0:07:45.19,0:07:45.94,Default,,0,0,0,,就像这样
Dialogue: 0,0:07:45.95,0:07:48.02,Default,,0,0,0,,然后创建一个URI
Dialogue: 0,0:07:52.42,0:08:02.42,Default,,0,0,0,,参数为selectedCharacter.thumbnail.large
Dialogue: 0,0:08:04.28,0:08:04.96,Default,,0,0,0,,
Dialogue: 0,0:08:04.96,0:08:08.68,Default,,0,0,0,,设置 UriKind 为absolute.
Dialogue: 0,0:08:09.76,0:08:11.13,Default,,0,0,0,,这会是一个URL
Dialogue: 0,0:08:12.47,0:08:16.00,Default,,0,0,0,,好了，哦等一下，我没拼对
Dialogue: 0,0:08:16.00,0:08:16.50,Default,,0,0,0,,好了
Dialogue: 0,0:08:18.53,0:08:19.89,Default,,0,0,0,,然后呢
Dialogue: 0,0:08:19.89,0:08:25.83,Default,,0,0,0,,很明显的largeImage.UriSource = uri
Dialogue: 0,0:08:25.83,0:08:28.72,Default,,0,0,0,,现在，已经有足够条件去创建一个
Dialogue: 0,0:08:28.72,0:08:29.53,Default,,0,0,0,,真实的位图了
Dialogue: 0,0:08:29.53,0:08:38.14,Default,,0,0,0,,this.DetailImage.Source = largeImage.
Dialogue: 0,0:08:38.14,0:08:39.07,Default,,0,0,0,,这样子应该能跑
Dialogue: 0,0:08:42.13,0:08:42.82,Default,,0,0,0,,让我们来试试
Dialogue: 0,0:08:50.54,0:08:54.07,Default,,0,0,0,,这是一个偶然发生的错误
Dialogue: 0,0:08:55.13,0:08:57.05,Default,,0,0,0,,我还不是很确定发生的原因
Dialogue: 0,0:08:57.05,0:08:59.69,Default,,0,0,0,,在这里的话，我比较确定
Dialogue: 0,0:08:59.69,0:09:03.29,Default,,0,0,0,,问题出在反序列化过程这里
Dialogue: 0,0:09:03.29,0:09:08.42,Default,,0,0,0,,这是其中一个我需要在这节课后面
Dialogue: 0,0:09:08.42,0:09:14.29,Default,,0,0,0,,添加代码来修复的地方
Dialogue: 0,0:09:14.29,0:09:15.39,Default,,0,0,0,,让我看多试几次
Dialogue: 0,0:09:19.40,0:09:22.43,Default,,0,0,0,,最终我们还是成功获取到了数据
Dialogue: 0,0:09:22.43,0:09:23.68,Default,,0,0,0,,好了
Dialogue: 0,0:09:23.68,0:09:28.14,Default,,0,0,0,,这会展示我们是否做对了没有
Dialogue: 0,0:09:28.14,0:09:30.88,Default,,0,0,0,,我单击其中任意一个项目
Dialogue: 0,0:09:30.88,0:09:32.84,Default,,0,0,0,,你可以看到图像和名字
Dialogue: 0,0:09:34.22,0:09:40.18,Default,,0,0,0,,图像和名字
Dialogue: 0,0:09:40.18,0:09:43.80,Default,,0,0,0,,就像我刚才所说的，大部分角色其实并没有角色描述
Dialogue: 0,0:09:43.80,0:09:45.94,Default,,0,0,0,,Pete Wisdom有他自己的描述
Dialogue: 0,0:09:45.95,0:09:47.35,Default,,0,0,0,,这对我们是好事
Dialogue: 0,0:09:47.35,0:09:51.54,Default,,0,0,0,,这样我们可以开始微调这一块区域了
Dialogue: 0,0:09:51.54,0:09:52.34,Default,,0,0,0,,如果你仔细看一下
Dialogue: 0,0:09:52.34,0:09:57.22,Default,,0,0,0,,首先，我给了这两行
Dialogue: 0,0:09:57.22,0:10:00.04,Default,,0,0,0,,的行高度都是相等的，我想我需要
Dialogue: 0,0:10:00.04,0:10:04.51,Default,,0,0,0,,把顶部这一行设置为“Auto”自动，底部这一行设置为 star 还是 auto 呢？
Dialogue: 0,0:10:04.51,0:10:06.23,Default,,0,0,0,,应该是“*”星号
Dialogue: 0,0:10:06.23,0:10:06.73,Default,,0,0,0,,然后
Dialogue: 0,0:10:06.73,0:10:10.00,Default,,0,0,0,,我需要给这家伙添加一些外边距
Dialogue: 0,0:10:10.00,0:10:12.59,Default,,0,0,0,,把周围的东西稍微推开一点
Dialogue: 0,0:10:12.59,0:10:14.55,Default,,0,0,0,,大概10个像素左右
Dialogue: 0,0:10:14.55,0:10:15.49,Default,,0,0,0,,好了
Dialogue: 0,0:10:15.49,0:10:17.14,Default,,0,0,0,,这里我们还有一些小工作要做
Dialogue: 0,0:10:17.14,0:10:22.79,Default,,0,0,0,,把这个提高一点，或者把这个调低一点（就是顶部的对齐）
Dialogue: 0,0:10:22.79,0:10:28.13,Default,,0,0,0,,开始吧！先转到 MainPage.xaml.
Dialogue: 0,0:10:28.13,0:10:31.22,Default,,0,0,0,,来到DetailImage这里
Dialogue: 0,0:10:31.22,0:10:35.48,Default,,0,0,0,,我要设置VerticalAlignment=“top”竖直对齐为顶部对齐
Dialogue: 0,0:10:35.48,0:10:39.32,Default,,0,0,0,,我想这样子可以实现我要的效果
Dialogue: 0,0:10:39.32,0:10:43.14,Default,,0,0,0,,转到Grid这里
Dialogue: 0,0:10:43.14,0:10:45.39,Default,,0,0,0,,实际上，我想应该是转到最外围这个Grid
Dialogue: 0,0:10:45.39,0:10:48.79,Default,,0,0,0,,在左手边添加一些外边距
Dialogue: 0,0:10:48.79,0:10:54.81,Default,,0,0,0,,所以Margin  = “10, 0, 0, 0”
Dialogue: 0,0:10:54.81,0:10:57.71,Default,,0,0,0,,实际上，我想我需要在右侧也加上10
Dialogue: 0,0:10:57.71,0:11:00.69,Default,,0,0,0,,确保右侧没有东西会重叠
Dialogue: 0,0:11:03.17,0:11:06.81,Default,,0,0,0,,下一件要做的事是
Dialogue: 0,0:11:06.81,0:11:10.46,Default,,0,0,0,,在内部这个Grid中
Dialogue: 0,0:11:15.58,0:11:17.69,Default,,0,0,0,,RowDefinition行高度设置为”Auto“ 自动
Dialogue: 0,0:11:17.69,0:11:20.74,Default,,0,0,0,,这样子应该可以修复这些问题了
Dialogue: 0,0:11:21.92,0:11:27.17,Default,,0,0,0,,然后是外边距
Dialogue: 0,0:11:27.17,0:11:32.44,Default,,0,0,0,,距离右侧大概10个像素
Dialogue: 0,0:11:35.10,0:11:38.10,Default,,0,0,0,,对于另外一个文本框也是一样的
Dialogue: 0,0:11:45.10,0:11:49.01,Default,,0,0,0,,所以现在再跑一下这个应用
Dialogue: 0,0:11:49.02,0:11:53.48,Default,,0,0,0,,我要重复刷新角色
Dialogue: 0,0:11:53.48,0:11:54.86,Default,,0,0,0,,直到找到一个有关于他（她）自己的描述
Dialogue: 0,0:12:05.06,0:12:05.59,Default,,0,0,0,,好了
Dialogue: 0,0:12:06.61,0:12:08.96,Default,,0,0,0,,这个结果我挺满意的
Dialogue: 0,0:12:10.01,0:12:13.48,Default,,0,0,0,,一样的问题，我觉得这个文本应该再高一点
Dialogue: 0,0:12:13.48,0:12:15.51,Default,,0,0,0,,我想要不这样也可以了吧 //逼死强迫症系列
Dialogue: 0,0:12:15.51,0:12:18.39,Default,,0,0,0,,然后就继续下面的工作了
Dialogue: 0,0:12:18.39,0:12:19.07,Default,,0,0,0,,但是你发现了吗？
Dialogue: 0,0:12:19.07,0:12:22.83,Default,,0,0,0,,我们这一次运行中只得到了三个项目//注：这里应该是口误，应该是四个
Dialogue: 0,0:12:22.83,0:12:26.73,Default,,0,0,0,,这也让我想顺便说一些东西
Dialogue: 0,0:12:26.73,0:12:28.37,Default,,0,0,0,,就是~~
Dialogue: 0,0:12:28.37,0:12:34.09,Default,,0,0,0,,通过这个PopulateMarvelCharactersAsync异步方法的调用
Dialogue: 0,0:12:34.09,0:12:39.06,Default,,0,0,0,,可能并不会返回那么多我们预期的结果
Dialogue: 0,0:12:40.09,0:12:44.28,Default,,0,0,0,,所以，现在我想要在这个列表中至少有十个项目，或者更多
Dialogue: 0,0:12:44.28,0:12:49.83,Default,,0,0,0,,我所要做的就是在这里添加一个while循环
Dialogue: 0,0:12:49.83,0:12:54.45,Default,,0,0,0,,while Tab Tab//面向快捷键编程
Dialogue: 0,0:12:54.45,0:12:56.58,Default,,0,0,0,,我们要检查的条件
Dialogue: 0,0:12:56.58,0:13:01.80,Default,,0,0,0,,是这个里面的漫威角色数量
Dialogue: 0,0:13:01.80,0:13:06.50,Default,,0,0,0,,所以MarvelCharacters.Count.
Dialogue: 0,0:13:06.51,0:13:09.40,Default,,0,0,0,,当他小于10
Dialogue: 0,0:13:09.40,0:13:13.80,Default,,0,0,0,,然后我们重复经历这个循环
Dialogue: 0,0:13:14.82,0:13:21.78,Default,,0,0,0,,在这里面我们要await MarvelFacade.PopulateMarvelCharactersAsync
Dialogue: 0,0:13:21.78,0:13:23.08,Default,,0,0,0,,
Dialogue: 0,0:13:23.08,0:13:27.19,Default,,0,0,0,,现在的问题是，这一个异步方法可能花费很多时间
Dialogue: 0,0:13:27.19,0:13:31.22,Default,,0,0,0,,来返回，那么我们这个循环就需要远远更多的时间
Dialogue: 0,0:13:31.22,0:13:35.10,Default,,0,0,0,,当前还在尝试着第一次
Dialogue: 0,0:13:35.10,0:13:40.15,Default,,0,0,0,,外面可能已经循环了很多次了
Dialogue: 0,0:13:40.15,0:13:42.15,Default,,0,0,0,,这就是await的工作方式
Dialogue: 0,0:13:42.15,0:13:43.95,Default,,0,0,0,,它工作起来类似一个承诺
Dialogue: 0,0:13:43.95,0:13:45.61,Default,,0,0,0,,然后就继续运行下一行代码了
Dialogue: 0,0:13:45.61,0:13:49.92,Default,,0,0,0,,但是这个承诺可能还没有返回当我们已经
Dialogue: 0,0:13:49.92,0:13:53.25,Default,,0,0,0,,开始判断漫威角色的当前数目
Dialogue: 0,0:13:53.25,0:13:58.93,Default,,0,0,0,,为了修复这个问题，我打算确保PopulateMarvelCharactersAsynch
Dialogue: 0,0:13:58.93,0:14:00.46,Default,,0,0,0,,返回一个task
Dialogue: 0,0:14:00.46,0:14:02.68,Default,,0,0,0,,然后我们只需要检查这个task，或者等待这个task
Dialogue: 0,0:14:02.68,0:14:08.51,Default,,0,0,0,,在我们继续下一个
Dialogue: 0,0:14:08.51,0:14:12.29,Default,,0,0,0,,while循环，或者检查while循环的检查表达式
Dialogue: 0,0:14:12.29,0:14:13.56,Default,,0,0,0,,转到MarvelFacade.cs
Dialogue: 0,0:14:13.56,0:14:14.94,Default,,0,0,0,,看看这里是不是返回task
Dialogue: 0,0:14:14.94,0:14:17.52,Default,,0,0,0,,我们确实需要它返回一个task，所以这是一个好消息
Dialogue: 0,0:14:17.52,0:14:20.86,Default,,0,0,0,,回到MainPage.xaml.cs.
Dialogue: 0,0:14:20.86,0:14:24.77,Default,,0,0,0,,替代调这个await语句
Dialogue: 0,0:14:24.77,0:14:27.18,Default,,0,0,0,,我只需要说，嘿，给我一个Task类型的t
Dialogue: 0,0:14:28.45,0:14:28.95,Default,,0,0,0,,~~~神马鬼
Dialogue: 0,0:14:30.34,0:14:35.15,Default,,0,0,0,,Task   T,
Dialogue: 0,0:14:35.15,0:14:39.41,Default,,0,0,0,,引用命名空间System.Threading.Tasks,现在呢
Dialogue: 0,0:14:39.41,0:14:41.02,Default,,0,0,0,,我们就可以使用它了
Dialogue: 0,0:14:41.02,0:14:42.78,Default,,0,0,0,,好了，做得很好
Dialogue: 0,0:14:42.78,0:14:44.14,Default,,0,0,0,,await t
Dialogue: 0,0:14:45.24,0:14:50.97,Default,,0,0,0,,这个会强制确保我们完成了第一次调用
Dialogue: 0,0:14:50.97,0:14:56.06,Default,,0,0,0,,再它重复循环，已经检查表达式之前
Dialogue: 0,0:14:57.36,0:15:01.86,Default,,0,0,0,,再次跑一下应用看看效果
Dialogue: 0,0:15:10.56,0:15:13.55,Default,,0,0,0,,1、2、3、4、5、6、7
Dialogue: 0,0:15:13.55,0:15:17.98,Default,,0,0,0,,等待~~还在转
Dialogue: 0,0:15:17.98,0:15:23.36,Default,,0,0,0,,8、9、10后面还有很多
Dialogue: 0,0:15:23.36,0:15:27.82,Default,,0,0,0,,还有最后一件事
Dialogue: 0,0:15:27.82,0:15:31.62,Default,,0,0,0,,可能会导致应用奔溃
Dialogue: 0,0:15:31.62,0:15:37.02,Default,,0,0,0,,如果我们这里出一点问题的话
Dialogue: 0,0:15:39.26,0:15:42.90,Default,,0,0,0,,我想添加一个try-catch包裹这一块的所有
Dialogue: 0,0:15:42.91,0:15:46.57,Default,,0,0,0,,我无法完全控制的独立代码
Dialogue: 0,0:15:46.57,0:15:49.89,Default,,0,0,0,,在这个案例里，我无法控制call out to Marvel.
Dialogue: 0,0:15:51.01,0:15:53.46,Default,,0,0,0,,这一块可能会导致应用奔溃
Dialogue: 0,0:15:53.46,0:15:54.22,Default,,0,0,0,,所以呢
Dialogue: 0,0:15:54.22,0:15:57.11,Default,,0,0,0,,用try-catch把这一块包裹起来
Dialogue: 0,0:15:57.11,0:15:59.56,Default,,0,0,0,,很不幸的是，你可以看到当我尝试去做的时候
Dialogue: 0,0:16:00.69,0:16:05.80,Default,,0,0,0,,我打算将其他的一并包裹进来
Dialogue: 0,0:16:05.80,0:16:08.32,Default,,0,0,0,,我需要做的就是复制粘贴~~
Dialogue: 0,0:16:08.32,0:16:10.50,Default,,0,0,0,,简单点~~说话的方式简单点~~
Dialogue: 0,0:16:10.50,0:16:13.27,Default,,0,0,0,,你并不总需要这样子做
Dialogue: 0,0:16:13.27,0:16:15.97,Default,,0,0,0,,唯一需要用try-catch包裹的
Dialogue: 0,0:16:15.97,0:16:17.75,Default,,0,0,0,,其实就只有这一行代码
Dialogue: 0,0:16:17.75,0:16:19.94,Default,,0,0,0,,但考虑到下面的代码是基于它的
Dialogue: 0,0:16:19.94,0:16:22.74,Default,,0,0,0,,我们只能这样子做
Dialogue: 0,0:16:22.74,0:16:24.43,Default,,0,0,0,,最终呢~
Dialogue: 0,0:16:24.43,0:16:26.40,Default,,0,0,0,,我们这里做的就是如果出错了
Dialogue: 0,0:16:26.40,0:16:28.22,Default,,0,0,0,,我们会说，这里有问题
Dialogue: 0,0:16:28.22,0:16:30.69,Default,,0,0,0,,但是我们就忽视这个问题吧！
Dialogue: 0,0:16:30.69,0:16:35.08,Default,,0,0,0,,也就是我们会返Task类型的t并且尝试检查判断表达式
Dialogue: 0,0:16:35.08,0:16:39.36,Default,,0,0,0,,会说：我们还没有超过10个项目
Dialogue: 0,0:16:39.36,0:16:41.94,Default,,0,0,0,,这也就意味着我们需要再次调用
Dialogue: 0,0:16:41.94,0:16:45.41,Default,,0,0,0,,我们会继续尝试直到无法尝试
Dialogue: 0,0:16:45.41,0:16:48.65,Default,,0,0,0,,或许我需要添加一个计数器来确保10次之后可能我们
Dialogue: 0,0:16:48.65,0:16:51.34,Default,,0,0,0,,就不再尝试，但是我就是不写~你打我啊
Dialogue: 0,0:16:57.55,0:16:59.06,Default,,0,0,0,,让我们看看现在的效果如何
Dialogue: 0,0:17:02.45,0:17:04.19,Default,,0,0,0,,好了，1、2、3、4、5
Dialogue: 0,0:17:04.19,0:17:05.84,Default,,0,0,0,,还有更多~
Dialogue: 0,0:17:05.84,0:17:08.70,Default,,0,0,0,,所以你可以看到它调用了两次
Dialogue: 0,0:17:08.70,0:17:12.84,Default,,0,0,0,,开始是B开头的，最后的F开头的
Dialogue: 0,0:17:12.84,0:17:15.88,Default,,0,0,0,,然后确保其他的东西都
Dialogue: 0,0:17:15.88,0:17:17.07,Default,,0,0,0,,返回正确
Dialogue: 0,0:17:20.30,0:17:28.63,Default,,0,0,0,,我想看看那些有角色描述的角色
Dialogue: 0,0:17:28.63,0:17:30.79,Default,,0,0,0,,很不幸的是，这里面没有一个有关于他（她）自己的角色描述
Dialogue: 0,0:17:32.55,0:17:34.18,Default,,0,0,0,,好吧
Dialogue: 0,0:17:34.18,0:17:35.34,Default,,0,0,0,,我很确定它正常工作了
Dialogue: 0,0:17:35.34,0:17:39.00,Default,,0,0,0,,这节课就到这里了，下节课我们再继续
Dialogue: 0,0:17:39.00,0:17:43.70,Default,,0,0,0,,讲解显示对应的漫画
Dialogue: 0,0:17:43.70,0:17:45.77,Default,,0,0,0,,基于我们所选中的角色
Dialogue: 0,0:17:45.77,0:17:46.79,Default,,0,0,0,,这是我们下节课的内容
Dialogue: 0,0:17:46.79,0:17:47.43,Default,,0,0,0,,下节课见！
Dialogue: 0,0:17:47.43,0:17:47.93,Default,,0,0,0,,谢谢！
Dialogue: 0,0:17:47.93,0:17:55.95,Default,,0,0,0,,微软大法好！
Dialogue: 0,0:17:55.95,0:17:57.95,Default,,0,0,0,,
